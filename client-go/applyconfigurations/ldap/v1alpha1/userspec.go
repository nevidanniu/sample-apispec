/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// UserSpecApplyConfiguration represents an declarative configuration of the UserSpec type for use
// with apply.
type UserSpecApplyConfiguration struct {
	CN   *string `json:"cn,omitempty"`
	SN   *string `json:"sn,omitempty"`
	Mail *string `json:"mail,omitempty"`
	Uid  *string `json:"uid,omitempty"`
}

// UserSpecApplyConfiguration constructs an declarative configuration of the UserSpec type for use with
// apply.
func UserSpec() *UserSpecApplyConfiguration {
	return &UserSpecApplyConfiguration{}
}

// WithCN sets the CN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CN field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithCN(value string) *UserSpecApplyConfiguration {
	b.CN = &value
	return b
}

// WithSN sets the SN field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SN field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithSN(value string) *UserSpecApplyConfiguration {
	b.SN = &value
	return b
}

// WithMail sets the Mail field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mail field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithMail(value string) *UserSpecApplyConfiguration {
	b.Mail = &value
	return b
}

// WithUid sets the Uid field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Uid field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithUid(value string) *UserSpecApplyConfiguration {
	b.Uid = &value
	return b
}
